{"version":3,"sources":["countdown.min.js"],"names":["Countdown","config","this","element","document","getElementById","elementId","offset","timeZone","deadline","time","total","undefined","seconds","minutes","hours","unit","dayUnit","units","hourUnit","minUnit","secUnit","display","hide","drawTime","prototype","updateTime","endtime","Date","parse","getTime","Math","floor","days","t","s","m","h","d","setTime","end","self","endArray","remain","i","length","elementArray","html","innerHTML","console","log","clearInterval","count","setInterval"],"mappings":"AAAA,YAGA,SAASA,WAAUC,GAClBC,KAAKC,QAAUC,SAASC,eAAeJ,EAAOK,WAC9CJ,KAAKK,OAASN,EAAOO,SACrBN,KAAKO,SAAWR,EAAOQ,SAAW,IAAMP,KAAKK,OAE7CL,KAAKQ,MACJC,MAAOC,OACPC,QAASD,OACTE,QAASF,OACTG,MAAOH,QAGRV,KAAKc,MACJC,QAAShB,EAAOiB,MAAM,GACtBC,SAAUlB,EAAOiB,MAAM,GACvBE,QAASnB,EAAOiB,MAAM,GACtBG,QAASpB,EAAOiB,MAAM,IAGvBhB,KAAKoB,SACJrB,EAAOsB,KAAK,GACZtB,EAAOsB,KAAK,GACZtB,EAAOsB,KAAK,GACZtB,EAAOsB,KAAK,IAGbrB,KAAKsB,SAAStB,KAAKC,QAASD,KAAKO,UAGlCT,UAAUyB,UAAUC,WAAa,SAASC,GAoBzC,MAnBAzB,MAAKQ,KAAKC,MAAQiB,KAAKC,MAAMF,IAAW,GAAKC,OAAQE,UACrD5B,KAAKQ,KAAKG,QAAUkB,KAAKC,MAAO9B,KAAKQ,KAAKC,MAAQ,IAAQ,IAC1DT,KAAKQ,KAAKI,QAAUiB,KAAKC,MAAO9B,KAAKQ,KAAKC,MAAQ,IAAO,GAAM,IAC/DT,KAAKQ,KAAKK,MAAQgB,KAAKC,MAAO9B,KAAKQ,KAAKC,MAAQ,KAAoB,IACpET,KAAKQ,KAAKuB,KAAOF,KAAKC,MAAM9B,KAAKQ,KAAKC,MAAQ,OAE1CT,KAAKoB,QAAQ,KAChBpB,KAAKQ,KAAKK,MAAQgB,KAAKC,MAAO9B,KAAKQ,KAAKC,MAAQ,OAE7CT,KAAKoB,QAAQ,KAChBpB,KAAKQ,KAAKI,QAAUiB,KAAKC,MAAO9B,KAAKQ,KAAKC,MAAQ,IAAO,KAEtDT,KAAKoB,QAAQ,KAChBpB,KAAKQ,KAAKG,QAAUkB,KAAKC,MAAO9B,KAAKQ,KAAKC,MAAQ,IAAQ,KAEvDT,KAAKoB,QAAQ,IAAMpB,KAAKoB,QAAQ,IAAMpB,KAAKoB,QAAQ,KACtDpB,KAAKQ,KAAKG,QAAUkB,KAAKC,MAAO9B,KAAKQ,KAAKC,MAAQ,OAIlDuB,EAAGhC,KAAKQ,KAAKC,MACbwB,EAAGjC,KAAKQ,KAAKG,QACbuB,EAAGlC,KAAKQ,KAAKI,QACbuB,EAAGnC,KAAKQ,KAAKK,MACbuB,EAAGpC,KAAKQ,KAAKuB,OAIfjC,UAAUyB,UAAUD,SAAW,SAASrB,EAASwB,GAgBhD,QAASY,KACRC,EAAMC,EAAKf,WAAWC,GACtBe,GAAYF,EAAIF,EAAGE,EAAIH,EAAGG,EAAIJ,EAAGI,EAAIL,GACrCQ,EAASH,EAAIN,CAGb,KAAK,GAAIU,GAAI,EAAGA,EAAIF,EAASG,OAAQD,IACpCF,EAASE,GAAKF,EAASE,GAAK,GAAK,IAAMF,EAASE,GAAKF,EAASE,EAG/DE,IACC,sBAAwBJ,EAAS,GAAK,2BAA6BD,EAAKzB,KAAKC,QAAU,iBACvF,uBAAyByB,EAAS,GAAK,4BAA8BD,EAAKzB,KAAKG,SAAW,iBAC1F,yBAA2BuB,EAAS,GAAK,8BAAgCD,EAAKzB,KAAKI,QAAU,iBAC7F,yBAA2BsB,EAAS,GAAK,8BAAgCD,EAAKzB,KAAKK,QAAU,iBAG9F,KAAK,GAAIuB,GAAI,EAAGG,EAAO,GAAIH,EAAIH,EAAKnB,QAAQuB,OAAQD,IAC9CH,EAAKnB,QAAQsB,KACjBG,GAAQD,EAAaF,GAGvBzC,GAAQ6C,UAAYD,EAEhBJ,GAAU,MACbM,QAAQC,IAAI,cACZC,cAAcC,IAzChB,GAAIA,GACHT,EACAH,EAKAE,KACAI,KAEGL,EAAOvC,IAEXqC,KACAa,EAAQC,YAAYd,EAAS","file":"countdown.min.js","sourcesContent":["'use strict';\n\n//Constructor\nfunction Countdown(config) {\n\tthis.element = document.getElementById(config.elementId);\n\tthis.offset = config.timeZone;\n\tthis.deadline = config.deadline + ' ' + this.offset;\n\n\tthis.time = {\n\t\ttotal: undefined,\n\t\tseconds: undefined,\n\t\tminutes: undefined,\n\t\thours: undefined\n\t};\n\n\tthis.unit = {\n\t\tdayUnit: config.units[0],\n\t\thourUnit: config.units[1],\n\t\tminUnit: config.units[2],\n\t\tsecUnit: config.units[3]\n\t};\n\n\tthis.display = [\n\t\tconfig.hide[0],\n\t\tconfig.hide[1],\n\t\tconfig.hide[2],\n\t\tconfig.hide[3]\n\t];\n\n\tthis.drawTime(this.element, this.deadline);\n}\n\nCountdown.prototype.updateTime = function(endtime) {\n\tthis.time.total = Date.parse(endtime) - (new Date()).getTime();\n\tthis.time.seconds = Math.floor((this.time.total / 1000) % 60);\n\tthis.time.minutes = Math.floor((this.time.total / 1000 / 60) % 60);\n\tthis.time.hours = Math.floor((this.time.total / (1000 * 60 * 60)) % 24);\n\tthis.time.days = Math.floor(this.time.total / (1000 * 60 * 60 * 24));\n\n\tif (this.display[0]) {\n\t\tthis.time.hours = Math.floor((this.time.total / (1000 * 60 * 60)));\n\t}\n\tif (this.display[1]) {\n\t\tthis.time.minutes = Math.floor((this.time.total / 1000 / 60));\n\t}\n\tif (this.display[2]) {\n\t\tthis.time.seconds = Math.floor((this.time.total / 1000) % 60);\n\t}\n\tif (this.display[0] && this.display[1] && this.display[2]) {\n\t\tthis.time.seconds = Math.floor((this.time.total / 1000));\n\t}\n\n\treturn {\n\t\tt: this.time.total,\n\t\ts: this.time.seconds,\n\t\tm: this.time.minutes,\n\t\th: this.time.hours,\n\t\td: this.time.days\n\t};\n};\n\nCountdown.prototype.drawTime = function(element, endtime) {\n\tvar count,\n\t\tremain,\n\t\tend,\n\t\tdays,\n\t\thours,\n\t\tminutes,\n\t\tseconds,\n\t\tendArray = [],\n\t\telementArray = [];\n\n\tvar self = this;\n\n\tsetTime();\n\tcount = setInterval(setTime, 1000);\n\n\tfunction setTime() {\n\t\tend = self.updateTime(endtime);\n\t\tendArray = [end.d, end.h, end.m, end.s];\n\t\tremain = end.t;\n\n\t\t//Prepend zero when remaining time gets lower than 10\n\t\tfor (var i = 0; i < endArray.length; i++) {\n\t\t\tendArray[i] = endArray[i] < 10 ? '0' + endArray[i] : endArray[i];\n\t\t}\n\n\t\telementArray = [\n\t\t\t'<span class=\"days\">' + endArray[0] + '<span class=\"days-unit\">' + self.unit.dayUnit + '</span></span>',\n\t\t\t'<span class=\"hours\">' + endArray[1] + '<span class=\"hours-unit\">' + self.unit.hourUnit + '</span></span>',\n\t\t\t'<span class=\"minutes\">' + endArray[2] + '<span class=\"minutes-unit\">' + self.unit.minUnit + '</span></span>',\n\t\t\t'<span class=\"seconds\">' + endArray[3] + '<span class=\"seconds-unit\">' + self.unit.secUnit + '</span></span>'\n\t\t];\n\n\t\tfor (var i = 0, html = ''; i < self.display.length; i++) {\n\t\t\tif (!self.display[i]) {\n\t\t\t\thtml += elementArray[i];\n\t\t\t}\n\t\t}\n\t\telement.innerHTML = html;\n\n\t\tif (remain <= 1000) {\n\t\t\tconsole.log('timer ends');\n\t\t\tclearInterval(count);\n\t\t}\n\t}\n};"]}